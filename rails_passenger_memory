#!/opt/ree/bin/ruby
pod=<<-POD

=head1 NAME
rails_passenger_memory - Munin plugin to monitor passenger application servers.
Monitors the amount of sessions and running, active and maximum amount of passenger instances.

=head1 APPLICABLE SYSTEMS
All systems that have passenger installed.

=head1 CONFIGURATION
The plugin needs to execute passenger-memory-stats.
This configuration section shows the defaults of the plugin:

  [passenger_*]
  user root
  command /usr/local/bin/ruby %c
  
Options
  env.passenger_status '/path/to/passenger-memory-stats'

ln -s /usr/share/munin/plugins/rails_passenger_memory /etc/munin/plugins/rails_passenger_memory

=head1 INTERPRETATION
The plugin shows the passenger memory stats

=head1 MAGIC MARKERS
  #%# family=auto
  #%# capabilities=autoconf

=head1 VERSION
1.1

=head1 BUGS
None known

=head1 AUTHOR
Bart ten Brinke - railsdoctors.com
(based on Daniel Manges - http://gist.github.com/20319)

=head1 LICENSE
MIT

POD

PASSENGER_MEMORY_STATS = ENV['passenger_memory_stats'] || '/opt/ree/bin/passenger-status'

# Check if this plugin can run
def autoconf
  begin
    require 'rubygems'
    gem "passenger", ">=2.0"
  rescue Exception => e
    puts "no (Gem not found: #{e})"
    exit 1
  end
  
  status = `#{PASSENGER_STATUS}`
  unless $?.success?
    puts "no (error whene excuting #{PASSENGER_STATUS})"
    exit 1
  end
  
  puts "yes"
  exit 0
end




def output_config
  puts <<-END
graph_category App
graph_title Passenger memory stats
graph_vlabel count
 
memory.label memory
END
  exit 0
end
 
def output_values
  status = `sudo /opt/ree/bin/passenger-memory-stats | tail -1`
  unless $?.success?
    $stderr.puts "failed executing passenger-memory-stats"
    exit 1
  end
  status =~ /(\d+\.\d+)/
  puts "memory.value #{$1}"
end
 
if ARGV[0] == "config"
  output_config
else
  output_values
end
